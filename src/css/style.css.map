{"version":3,"file":"style.css","sources":["style.scss","common/_reset.scss","common/_base.scss","modules/_sprite.scss","modules/_header.scss","modules/_home.scss"],"sourcesContent":["@import 'common/reset';\n@import 'common/base';\n@import 'modules/sprite';\n@import 'modules/header';\n@import 'modules/home';\n\nheader {\n\tbackground-color: red;\n\t@include sprite($cb-bullet-home);\n}\n","body {\n  margin: 0;\n  padding: 0;\n}\nul,ol {\n  list-style: none;\n}",".blind {\n  overflow: hidden;\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  clip: rect(0 0 0 0);\n}","// SCSS variables are information about icon's compiled state, stored under its original file name\n//\n// .icon-home {\n//   width: $icon-home-width;\n// }\n//\n// The large array-like variables contain all information about a single icon\n// $icon-home: x y offset_x offset_y width height total_width total_height image_path;\n//\n// At the bottom of this section, we provide information about the spritesheet itself\n// $spritesheet: width height image $spritesheet-sprites;\n$cb-bullet-home-name: 'cb_bullet_home';\n$cb-bullet-home-x: 0px;\n$cb-bullet-home-y: 0px;\n$cb-bullet-home-offset-x: 0px;\n$cb-bullet-home-offset-y: 0px;\n$cb-bullet-home-width: 18px;\n$cb-bullet-home-height: 14px;\n$cb-bullet-home-total-width: 18px;\n$cb-bullet-home-total-height: 14px;\n$cb-bullet-home-image: '../../src/img/sprite.png';\n$cb-bullet-home: (0px, 0px, 0px, 0px, 18px, 14px, 18px, 14px, '../../src/img/sprite.png', 'cb_bullet_home', );\n$spritesheet-width: 18px;\n$spritesheet-height: 14px;\n$spritesheet-image: '../../src/img/sprite.png';\n$spritesheet-sprites: ($cb-bullet-home, );\n$spritesheet: (18px, 14px, '../../src/img/sprite.png', $spritesheet-sprites, );\n\n// The provided mixins are intended to be used with the array-like variables\n//\n// .icon-home {\n//   @include sprite-width($icon-home);\n// }\n//\n// .icon-email {\n//   @include sprite($icon-email);\n// }\n//\n// Example usage in HTML:\n//\n// `display: block` sprite:\n// <div class=\"icon-home\"></div>\n//\n// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:\n//\n// // CSS\n// .icon {\n//   display: inline-block;\n// }\n//\n// // HTML\n// <i class=\"icon icon-home\"></i>\n@mixin sprite-width($sprite) {\n  width: nth($sprite, 5);\n}\n\n@mixin sprite-height($sprite) {\n  height: nth($sprite, 6);\n}\n\n@mixin sprite-position($sprite) {\n  $sprite-offset-x: nth($sprite, 3);\n  $sprite-offset-y: nth($sprite, 4);\n  background-position: $sprite-offset-x  $sprite-offset-y;\n}\n\n@mixin sprite-image($sprite) {\n  $sprite-image: nth($sprite, 9);\n  background-image: url(#{$sprite-image});\n}\n\n@mixin sprite($sprite) {\n  @include sprite-image($sprite);\n  @include sprite-position($sprite);\n  @include sprite-width($sprite);\n  @include sprite-height($sprite);\n}\n\n// The `sprites` mixin generates identical output to the CSS template\n//   but can be overridden inside of SCSS\n//\n// @include sprites($spritesheet-sprites);\n@mixin sprites($sprites) {\n  @each $sprite in $sprites {\n    $sprite-name: nth($sprite, 10);\n    .#{$sprite-name} {\n      @include sprite($sprite);\n    }\n  }\n}\n","header {\n\tbackground-color: red;\n}",""],"names":[],"mappings":"ACAA,AAAA,IAAI,AAAC,CACH,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,CAAC,CACX,AACD,AAAA,EAAE,CAAC,EAAE,AAAC,CACJ,UAAU,CAAE,IAAI,CACjB,ACND,AAAA,MAAM,AAAC,CACL,QAAQ,CAAE,MAAM,CAChB,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,GAAG,CACX,MAAM,CAAE,IAAI,CACZ,IAAI,CAAE,aAAa,CACpB,AEPD,AAAA,MAAM,AAAC,CACN,gBAAgB,CAAE,GAAG,CACrB,AJID,AAAA,MAAM,AAAC,CACN,gBAAgB,CAAE,GAAG,CG6DpB,gBAAgB,CAAE,6BAAK,CALvB,mBAAmB,CA1CO,GAAG,CAAE,GAAG,CAgClC,KAAK,CAhC+B,IAAI,CAoCxC,MAAM,CApCoC,IAAI,CHZ/C"}